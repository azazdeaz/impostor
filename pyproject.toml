[project]
authors = [{ name = "Polgar Andras", email = "azazdeaz@gmail.com" }]
dependencies = []
description = "Add a short description here"
name = "impostor"
requires-python = ">=3.10,<3.11"
version = "0.1.0"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
impostor = { path = ".", editable = true }

[tool.pixi.tasks]
start = "python -m impostor.run_start"
setup-vscode = "run python scripts/setup_vscode.py"
# Build and install a development version of the rerun-sdk Python package.
#
# This only needs to be called when you have made changes that would impact the rust bindings of
# the python package. The python code will be imported directly from the source folder and will
# reflect changes immediately upon re-import.
# Note:
# - pip (which is called by maturin develop) doesn't recognize conda/pixi envs as venv, and thus complains if
#   configured to not install outside venv (which is a good practice). PIP_REQUIRE_VIRTUALENV=0 disables this check.
py-build-common = { cmd = "PIP_REQUIRE_VIRTUALENV=0 maturin develop --target-dir target_maturin", depends_on = [
#   "rerun-build", # We need to build rerun-cli since it is bundled in the python package.
] }
gen-msgs = "cargo run --bin gen-msgs --manifest-path impostor-msgs/Cargo.toml"
# py-build-common-release = { cmd = "PIP_REQUIRE_VIRTUALENV=0 RERUN_ALLOW_MISSING_BIN=1 maturin develop --release --manifest-path rerun_py/Cargo.toml --extras=tests", depends_on = [
#   "rerun-build-release", # We need to build rerun-cli since it is bundled in the python package.
# ] }
register-jupyter-kernel = "ipython kernel install --user --name=impostor-pixi --display-name='Impostor Pixi'"

[tool.pixi.dependencies]
ruff = ">=0.8.3,<0.9"
numpy = ">=2.1.1,<3"
pip = ">=24.2,<25"
rerun-sdk = ">=0.21.0,<0.22"
scipy = ">=1.14.1,<2"
pyyaml = ">=6.0.2,<7"
# pixi-kernel = ">=0.6.0,<0.7"
ipykernel = ">=6.29.5,<7"
jupyter = ">=1.1.1,<2"

